version: "3.11"

services:
  iagmaillm:
    build:
      context: .
      args:
        target: runtime
      dockerfile: Dockerfile.optimized
    image: iagamiapp:optimized
    ports:
      - "4141:4000"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@db:5432/litellm"  # Updated
      STORE_MODEL_IN_DB: "True"
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 http://localhost:5413/health/liveliness || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    container_name: iagamillm_db
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "4000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"

volumes:
  prometheus_data:
    driver: local
  postgres_data:
    name: litellm_postgres_data


# //  dinesh Code 
# version: "3.8"

# services:
#   litellm:
#     build:
#       context: .
#       dockerfile: Dockerfile.optimized
#     container_name: litellm-min
#     ports:
#       - "4000:4000"
#     volumes:
#       - .:/app
#     environment:
#       - PYTHONUNBUFFERED=1
#     restart: unless-stopped
